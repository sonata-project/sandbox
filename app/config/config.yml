imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

    # Mopa Bootstrap
    - { resource: mopa/mopa_bootstrap.yml }

    # Knp Paginator
    - { resource: knp/knp_paginator.yml }

    # FriendOfSymfony Bundles
    - { resource: fos/fos_ck_editor.yml }
    - { resource: fos/fos_comment.yml }
    - { resource: fos/fos_rest.yml }
    - { resource: fos/fos_user.yml }
    #- { resource: fos/fos_elastica.yml }

    #- { resource: bazinga/bazinga_hateos.yml }

    # Sonata Core Bundles
    - { resource: sonata/sonata_block.yml }
    - { resource: sonata/sonata_formatter.yml }
    - { resource: sonata/sonata_cache.yml }
    - { resource: sonata/sonata_seo.yml }
    - { resource: sonata/sonata_timeline.yml }
    - { resource: sonata/sonata_intl.yml }
    - { resource: sonata/sonata_core.yml }

    # Sonata Feature Bundles
    - { resource: sonata/sonata_admin.yml }
    - { resource: sonata/sonata_classification.yml }
    - { resource: sonata/sonata_comment.yml }
    - { resource: sonata/sonata_page.yml }
    - { resource: sonata/sonata_media.yml }
    - { resource: sonata/sonata_news.yml }
    - { resource: sonata/sonata_user.yml }
    - { resource: sonata/sonata_notification.yml }

    # Sonata e-commerce bundles
    - { resource: sonata/sonata_price.yml }
    - { resource: sonata/sonata_order.yml }
    - { resource: sonata/sonata_payment.yml }
    - { resource: sonata/sonata_product.yml }
    - { resource: sonata/sonata_invoice.yml }
    - { resource: sonata/sonata_delivery.yml }
    - { resource: sonata/sonata_customer.yml }
    - { resource: sonata/sonata_basket.yml }

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

    base_template_class: Sonata\CacheBundle\Twig\TwigTemplate14

    form_themes:
        - 'SonataFormatterBundle:Form:formatter.html.twig'
        - 'SonataMediaBundle:Form:media_widgets.html.twig'
        - 'SonataCoreBundle:Form:datepicker.html.twig'
        - '@FOSCKEditor/Form/ckeditor_widget.html.twig'

    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default

        connections:
            default:
                driver:   "%database_driver%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                host:     "%database_host%"
                password: "%database_password%"
                charset:  UTF8

        types:
            json:     Doctrine\DBAL\Types\JsonType
            currency: Sonata\Component\Currency\CurrencyDoctrineType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# JMS Serializer Configuration
jms_serializer:
    metadata:
        directories:
            -
                path: '%kernel.root_dir%/../vendor/sonata-project/user-bundle/Resources/config/serializer/FOSUserBundle'
                namespace_prefix: 'FOS\UserBundle'
            -
                path: '%kernel.root_dir%/../vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/serializer/Component'
                namespace_prefix: 'Sonata\Component\Basket'
            -
                path: '%kernel.root_dir%/../vendor/sonata-project/datagrid-bundle/Resources/config/serializer'
                namespace_prefix: 'Sonata\DatagridBundle'

nelmio_api_doc: ~

sensio_framework_extra:
    view:    { annotations: true } # FOS\RestBundle\DependencyInjection\Compiler\ConfigurationCheckPass: You must enable the SensioFrameworkExtraBundle view annotations to use the ViewResponseListener
    router:  { annotations: true }
    request: { converters:  true }

webpack_encore:
    # The path where Encore is building the assets - i.e. Encore.setOutputPath()
    output_path: '%kernel.project_dir%/web/build'
      # If multiple builds are defined (as shown below), you can disable the default build:
      # output_path: false

      # if using Encore.enableIntegrityHashes() and need the crossorigin attribute (default: false, or use 'anonymous' or 'use-credentials')
      # crossorigin: 'anonymous'

      # preload all rendered script and link tags automatically via the http2 Link header
      # preload: true

      # Throw an exception if the entrypoints.json file is missing or an entry is missing from the data
      # strict_mode: false

      # if you have multiple builds:
      # builds:
      # pass "frontend" as the 3rg arg to the Twig functions
      # {{ encore_entry_script_tags('entry1', null, 'frontend') }}

    # frontend: '%kernel.project_dir%/public/frontend/build'

    # Cache the entrypoints.json (rebuild Symfony's cache when entrypoints.json changes)
    # Available in version 1.2
    # Put in config/packages/prod/webpack_encore.yaml
    # cache: true
